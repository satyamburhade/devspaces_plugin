containers/devspaces-idea-rhel8-container:3.17.0/registry.redhat.io/rhel9-2-els/rhel:9.2-1362 as ubi-builder
containers/devspaces-idea-rhel8-container:3.17.0/registry.redhat.io/rhel9-2-els/rhel:9.2-1362
FROM registry.redhat.io/rhel9-2-els/rhel:9.2-1362 as ubi-builder
COPY --chown=0:0 asset-required-rpms.txt /tmp/asset-required-rpms.txt
RUN yum install unzip -y --nodocs && \
    yum install --installroot /mnt/rootfs \
            --releasever 8 --setopt install_weak_deps=false --nodocs -y && \
    yum --installroot /mnt/rootfs clean all
RUN rm -rf /mnt/rootfs/var/cache/* /mnt/rootfs/var/log/dnf* /mnt/rootfs/var/log/yum.*
COPY --chown=0:0 asset-ide-packaging.tar.gz .
COPY --chown=0:0 asset-projector-server-assembly.zip .
COPY --chown=0:0 asset-static-assembly.tar.gz .
COPY --chown=0:0 asset-che-plugin-assembly.zip .
COPY --chown=0:0 asset-machine-exec ide/bin/machine-exec
FROM registry.redhat.io/rhel9-2-els/rhel:9.2-1362
COPY --from=ubi-builder /mnt/rootfs/ /

containers/devspaces-machineexec-rhel8-container:3.17.0/registry.redhat.io/rhel9-2-els/rhel:9.2-1362 as builder
containers/devspaces-machineexec-rhel8-container:3.17.0/registry.redhat.io/rhel9-2-els/rhel:9.2-1362 as runtime
FROM registry.redhat.io/rhel9-2-els/rhel:9.2-1362 as builder
COPY . .
RUN dnf -y install golang && \
    adduser unprivilegeduser && \
    GOOS=linux go build -mod=vendor -a -ldflags '-w -s' -a -installsuffix cgo -o che-machine-exec . && \
FROM registry.redhat.io/rhel9-2-els/rhel:9.2-1362 as runtime
COPY --from=builder /rootfs /
RUN dnf install -y openssl && \

containers/devspaces-operator-bundle-rhel8-container:3.17.0/scratch
FROM scratch
COPY manifests /manifests/
COPY metadata /metadata/

containers/devspaces-pluginregistry-rhel8-container:3.17.0/registry.redhat.io/rhel9-2-els/rhel:9.2-1362 as builder
containers/devspaces-pluginregistry-rhel8-container:3.17.0/registry.redhat.io/rhel9-2-els/rhel:9.2-1362
FROM registry.redhat.io/rhel9-2-els/rhel:9.2-1362 as builder
RUN dnf install -y make
RUN dnf module install -y nodejs:18/development
COPY $REMOTE_SOURCES $REMOTE_SOURCES_DIR
 && npm install \
FROM registry.redhat.io/rhel9-2-els/rhel:9.2-1362
COPY root-local.tgz /tmp/root-local.tgz
COPY ./build/dockerfiles/content_sets_rhel9.repo /etc/yum.repos.d/
COPY ./build/dockerfiles/rhel.install.sh /tmp
RUN /tmp/rhel.install.sh && rm -f /tmp/rhel.install.sh
    dnf module install postgresql:15/server nodejs:18/development -y
COPY --chown=0:0 /openvsx-server.tar.gz .
COPY /build/dockerfiles/application.yaml /openvsx-server/config/
COPY --from=builder --chown=0:0 /tmp/opt/ovsx /tmp/opt/ovsx
COPY /build/scripts/import_vsix.sh /usr/local/bin
COPY /build/scripts/start_services.sh /usr/local/bin/
COPY /build/dockerfiles/openvsx.conf /etc/httpd/conf.d/
COPY /build/scripts/*.sh /build/

containers/devspaces-server-rhel8-container:3.17.0/registry.redhat.io/rhel9-2-els/rhel:9.2-1222
FROM registry.redhat.io/rhel9-2-els/rhel:9.2-1222
RUN dnf -y install java-17-openjdk-headless tar gzip shadow-utils findutils && \
    dnf -y clean all && rm -rf /var/cache/yum && echo "Installed Packages" && rpm -qa | sort -V && echo "End Of Installed Packages" && \
    adduser -G root user && mkdir -p /home/user/devspaces
COPY artifacts/assembly-main.tar.gz /tmp/assembly-main.tar.gz

